\
#!/usr/bin/env bash
set -euo pipefail

# ---------- Tiny logger ----------
ts(){ date -u +"[%Y-%m-%dT%H:%M:%S+00:00]"; }
info(){ echo "$(ts) [INFO] $*"; }
ok(){   echo "$(ts) [OK]   $*"; }
warn(){ echo "$(ts) [WARN] $*"; }
err(){  echo "$(ts) [ERR]  $*" >&2; }

# ---------- Config (ENV) ----------
MODE="${MODE:-init}"                       # init|brick
VOLNAME="${VOLNAME:-gv0}"
REPLICA="${REPLICA:-1}"
VTYPE="${VTYPE:-replica}"                  # replica|disperse (nur replica genutzt)
BRICK_PATH="${BRICK_PATH:-/bricks/brick1}"
BRICK_PATHS="${BRICK_PATHS:-}"
PEERS="${PEERS:-}"                         # aktuell nicht genutzt im Solo-Setup
REQUIRE_ALL_PEERS="${REQUIRE_ALL_PEERS:-0}"
ALLOW_FORCE_CREATE="${ALLOW_FORCE_CREATE:-1}"
ALLOW_EMPTY_STATE="${ALLOW_EMPTY_STATE:-1}"
LOG_LEVEL="${LOG_LEVEL:-INFO}"

# ---------- Helpers ----------
ensure_glusterd_vol() {
  local vol="/etc/glusterfs/glusterd.vol"
  mkdir -p /etc/glusterfs /var/lib/glusterd
  if [[ ! -s "$vol" ]]; then
    cat >"$vol" <<'EOF'
# Autogenerated by entrypoint
include "glusterfs-core.vol"
volume management
    type mgmt/glusterd
    option working-directory /var/lib/glusterd
    option transport.address-family inet
    option max-port 60999
end-volume
EOF
  else
    if ! grep -q 'option[[:space:]]\+transport.address-family' "$vol"; then
      sed -i '/type mgmt\/glusterd/a\    option transport.address-family inet' "$vol"
    fi
    if ! grep -q 'option[[:space:]]\+max-port' "$vol"; then
      sed -i '/type mgmt\/glusterd/a\    option max-port 60999' "$vol"
    fi
  fi
}

start_glusterd(){
  ensure_glusterd_vol
  glusterd -N --log-level "$LOG_LEVEL" &
  local pid=$!
  sleep 0.5
  if kill -0 "$pid" 2>/dev/null; then
    ok "glusterd läuft (PID=$pid)."
  else
    err "glusterd konnte nicht gestartet werden"; exit 1
  fi
  # warten bis mgmt erreichbar
  for i in {1..30}; do
    if gluster --version >/dev/null 2>&1 && gluster pool list >/dev/null 2>&1 || gluster volume info >/dev/null 2>&1; then
      return 0
    fi
    sleep 0.3
  done
  warn "glusterd scheint langsam zu sein – fahre fort."
}

brick_list_from_env(){
  local host="${HOSTNAME:-$(hostname -s)}"
  local arr=("$BRICK_PATH")
  if [[ -n "$BRICK_PATHS" ]]; then
    IFS=',' read -r -a extras <<< "$BRICK_PATHS"
    arr+=("${extras[@]}")
  fi
  # make unique
  local uniq=()
  for b in "${arr[@]}"; do
    [[ -z "$b" ]] && continue
    local seen=0
    for u in "${uniq[@]:-}"; do [[ "$u" == "$b" ]] && seen=1 && break; done
    [[ $seen -eq 0 ]] && uniq+=("$b")
  done
  echo "${uniq[@]}"
}

ensure_bricks(){
  local arr; read -r -a arr <<< "$(brick_list_from_env)"
  for bp in "${arr[@]}"; do
    mkdir -p "$bp"
  done
}

volume_exists(){
  gluster volume info "$VOLNAME" >/dev/null 2>&1
}

ensure_volume_started(){
  if ! gluster volume status "$VOLNAME" >/dev/null 2>&1; then
    gluster volume start "$VOLNAME" >/dev/null
  fi
}

create_volume_solo(){
  local arr; read -r -a arr <<< "$(brick_list_from_env)"
  ensure_bricks

  local host="${HOSTNAME:-$(hostname -s)}"
  local spec=()
  for bp in "${arr[@]}"; do
    spec+=("${host}:${bp}")
  done

  local force=""
  [[ "${ALLOW_FORCE_CREATE}" == "1" ]] && force="force"

  if [[ "${VTYPE}" == "replica" ]]; then
    info "Erzeuge Volume: volume create ${VOLNAME} replica ${REPLICA} transport tcp ${spec[*]} ${force}"
    gluster volume create "${VOLNAME}" replica "${REPLICA}" transport tcp "${spec[@]}" ${force:+force} >/dev/null
  else
    err "VTYPE=${VTYPE} wird im Solo-Setup nicht unterstützt"; exit 1
  fi

  gluster volume start "${VOLNAME}" >/dev/null
  gluster volume set "${VOLNAME}" network.ping-timeout 5 >/dev/null || true
  gluster volume set "${VOLNAME}" performance.client-io-threads on >/dev/null || true
}

# ---------- Start ----------
info "===== Startparameter ====="
env | grep -E '^(MODE|VOLNAME|REPLICA|VTYPE|BRICK_PATH|BRICK_PATHS|PEERS|REQUIRE_ALL_PEERS|ALLOW_FORCE_CREATE|ALLOW_EMPTY_STATE|LOG_LEVEL)=' | LC_ALL=C sort | sed 's/^/  /'

start_glusterd

case "$MODE" in
  init)
    info "Modus: INIT"
    if volume_exists; then
      info "Volume ${VOLNAME} existiert bereits."
      ensure_volume_started
    else
      create_volume_solo
    fi
    ;;
  brick)
    info "Modus: BRICK (nur glusterd und Bricks bereitstellen)"
    ensure_bricks
    ;;
  *)
    err "Unbekannter MODE=$MODE"; exit 1;;
esac

ok "Bereit; Folge Logs:"
exec tail -F /var/log/glusterfs/*.log
