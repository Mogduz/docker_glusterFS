# =============================================================================
# Gluster Solo (2 Bricks) — .env.example
# Copy this file to `.env` and adjust values as needed.
#
# This stack builds a single Gluster server with two bricks inside one container.
# It publishes Gluster management ports (24007-24008) and **data ports**
# for bricks. Clients on another host (e.g., 10.1.0.0/16) can mount via:
#   mount -t glusterfs gluster-solo:/gv0 /mnt/gluster
#
# IMPORTANT: The published DATA_PORT_* range MUST include all ports Gluster
# may choose for bricks. We default to the IANA ephemeral range 49152–60999,
# and we also cap Gluster with MAX_PORT to 60999. Keep these in sync.
# =============================================================================

# -----------------------------------------------------------------------------
# Identity & runtime
CONTAINER_NAME=gluster-solo          # container name
HOSTNAME_GLUSTER=gluster-solo        # hostname visible in Gluster peer/vol info
TZ=UTC                                # time zone
UMASK=0022                            # process umask inside container
LOG_LEVEL=INFO                        # INFO|WARNING|DEBUG (entrypoint verbosity)

# -----------------------------------------------------------------------------
# Healthcheck
HC_INTERVAL=10s
HC_TIMEOUT=5s
HC_START_PERIOD=30s
HC_RETRIES=20

# -----------------------------------------------------------------------------
# Networking / Ports
MGMT_PORT1=24007                      # Gluster management
MGMT_PORT2=24008                      # Secondary mgmt (volfiles)
DATA_PORT_START=49152                 # Start of published brick/data ports
DATA_PORT_END=49251                   # End of published brick/data ports (match MAX_PORT)
PRIVATE_IP=10.0.1.2                   # Host's IP reachable by clients (10.1.0.0/16)
BIND_ON_PRIVATE_IP=true
HOST_BIND_PREFIX=
ADDRESS_FAMILY=inet                   # inet (IPv4) or inet6 (IPv6)
MAX_PORT=49251                        # Upper bound for Gluster-assigned ports

# -----------------------------------------------------------------------------
# Bricks — map host paths to /bricks/brick1 and /bricks/brick2 in container
# NOTE: You must ensure these host paths exist on the Docker host.
BRICK1_MAPPING=/mnt/gluster/brick1:/bricks/brick1:rw
BRICK2_MAPPING=/mnt/gluster/brick2:/bricks/brick2:rw

# -----------------------------------------------------------------------------
# Volume-Definitionsdatei (YAML)
# -----------------------------------------------------------------------------
# Host-Pfad zur Volumen-Definitionsdatei. So kannst du mehrere Setups fahren:
#   z.B. ./volumes.dev.yml, ./volumes.prod.yml, ./volumes.qa.yml
VOLUMES_FILE=./volumes.yml

# Zielpfad im Container (EntryPoint liest diese Datei):
VOLUMES_YAML=/etc/gluster/volumes.yml


# -----------------------------------------------------------------------------
# Enable mount inside container (standardmäßig deaktiviert; Client nicht im Server-Container installiert)
# Where to mount the volume (inside the container)
# Mount options (comma-separated)


# -----------------------------------------------------------------------------
# Volumes (mehrere) & Quotas (Server-only)
# -----------------------------------------------------------------------------
# Liste mehrerer Volumes (Komma-separiert). Standard: gv0
# Optional: Quotas pro Volume (Komma-separiert) im Format <vol>=<Größe>
# Beispiele: gv0=200G,gv1=1T,logs=500G
# Optional: Soft-Limit in %, z. B. 80 für 80%%

# Volumes & Quotas werden über ./volumes.yml konfiguriert (Compose mountet sie nach /etc/gluster/volumes.yml:ro).
